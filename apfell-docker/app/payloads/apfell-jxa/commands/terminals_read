exports.terminals_read = function(task, command, params){
    var split_params = params.split(" ");
    //this means command is: terminals_read [history] [contents]
    var history = false;
    var contents = false;
    if(split_params.includes('history')){
        history = true;
    }
    if(split_params.includes('contents')){
        contents = true;
    }
	var all_data = {};
	try{
		var term = Application("Terminal");
		if(term.running()){
            var windows = term.windows;
            for(var i = 0; i < windows.length; i++){
                var win_info = "Name: " + windows[i].name() +
                "\\nVisible: " + windows[i].visible() +
                "\\nFrontmost: " + windows[i].frontmost();
                var all_tabs = [];
                // store the windows information in id_win in all_data
                all_data["window_" + i] = win_info;
                for(var j = 0; j < windows[i].tabs.length; j++){
                    var tab_info = "Win/Tab: " + i + "/" + j +
                    "\\nBusy: " + windows[i].tabs[j].busy() +
                    "\\nProcesses: " + windows[i].tabs[j].processes() +
                    "\\nSelected: " + windows[i].tabs[j].selected() +
                    "\\nTTY: " + windows[i].tabs[j].tty();
                    if(windows[i].tabs[j].titleDisplaysCustomTitle()){
                        tab_info += "\\nCustomTitle: " + windows[i].tabs[j].customTitle();
                    }
                    if(history){
                        tab_info += "\\nHistory: " + windows[i].tabs[j].history();
                    }
                    if(contents){
                        tab_info += "\\nContents: " + windows[i].tabs[j].contents();
                    }
                    all_tabs.push(tab_info);
                }
                // store all of the tab information corresponding to that window id at id_tabs
                all_data[i + "_tabs"] = all_tabs;
            }
        }else{
            return "Terminal is not running";
        }

	}catch(error){
		all_data['error'] = error.toString();
	}
	return JSON.stringify(all_data, null, 2);
};
COMMAND_ENDS_HERE